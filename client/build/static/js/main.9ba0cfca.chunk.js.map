{"version":3,"sources":["utils/UserContext/UserActions.js","utils/UserContext/UserContext.js","components/FormField/FormField.js","components/FormControl/FormControl.js","components/FormIcon/FormIcon.js","components/FormHelp/FormHelp.js","components/StatesDropdown/StatesDropdown.js","utils/API/API.js","components/UserForm/UserForm.js","components/LogoutButton/LogoutButton.js","components/SignUpButton/index.js","components/Nav/Nav.js","components/NavLogin/NavLogin.js","pages/Signup/Signup.js","components/SearchBar/index.js","components/Hero/Hero.js","pages/Home/Home.js","components/Card/Card.js","pages/Listings/Listings.js","components/Field/Field.js","components/Dropdown/Dropdown.js","components/ItemImage/ItemImage.js","pages/ListingPost/ListingPost.js","components/ItemRequestForm/ItemRequestForm.js","components/MessageOwnerButton/MessageOwnerButton.js","components/ItemInfo/ItemInfo.js","components/ItemGoogleMaps/ItemGoogleMaps.js","pages/Item/Item.js","components/NavTabs/NavTabs.js","components/ProfileItemContainer/index.js","components/ReturnButton/index.js","components/SuccessButton/SuccessButton.js","components/RejectButton/RejectButton.js","pages/Profile/Profile.js","images/index.js","components/UpdateProfile/UpdateProfile.js","pages/EditProfile/EditProfile.js","App.js","registerServiceWorker.js","index.js"],"names":["SET_USER","StoreContext","createContext","Provider","reducer","state","action","type","Object","objectSpread","user","UserProvider","_ref","value","props","objectWithoutProperties","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","react_default","a","createElement","assign","useStoreContext","useContext","FormField","className","concat","fieldClass","filedClass","label","children","FormControl","controlClass","FormIcon","size","side","icon","FormHelp","message","StatesDropdown","ref","stateRef","disabled","map","key","selected","defaultState","getCurrentUser","axios","get","getProfile","id","getItem","renterRequest","renterId","put","postAppointment","data","post","postListing","loginUser","userData","addOwned","itemId","UserForm","_useStoreContext","_useStoreContext2","usernameRef","useRef","passwordRef","firstNameRef","lastNameRef","emailRef","addressRef","cityRef","zipCodeRef","_useState","useState","error","_useState2","signupErrorState","setSignupError","profileInputs","history","useHistory","loginHelper","then","res","_id","push","catch","err","response","dist","Column","components_FormField_FormField","components_FormControl_FormControl","firstName","placeholder","lastName","email","components_FormIcon_FormIcon","components_StatesDropdown_StatesDropdown","zipCode","name","style","width","onClick","e","preventDefault","newUser","current","username","address","city","password","forEach","input","delete","errors","keyValue","components_FormHelp_FormHelp","LogoutButton","SignUpButton","react_router_dom","to","Nav","currentClassName","isClicked","mobileColor","toggle","setToggle","location","useLocation","color","Brand","pathname","Item","activeClassName","Burger","console","log","Menu","Container","position","Dropdown","dropdown","hoverable","marginLeft","src","components_LogoutButton_LogoutButton","components_SignUpButton","NavLogin","usernameLoginRef","passwordLoginRef","loginInputs","loginErrorState","setLoginError","class","onSubmit","Fragment","Signup","components_Nav_Nav","components_NavLogin_NavLogin","components_UserForm_UserForm","SearchBar","search","onChange","handleInputChange","reference","handleSearch","Hero","searchTermRef","components_SearchBar","localStorage","setItem","Home","useEffect","Hero_Hero","kind","renderAs","notification","link","option","Card","data-id","handleItemClick","img","alt","itemName","price","Listings","filterRef","setAllItems","searchTerm","setFilter","removeItem","allItems","_useState3","_useState4","filter","_useState5","toConsumableArray","_useState6","filtered","setFiltered","_useState7","_useState8","electonicsItems","setElectronicsItems","_useState9","_useState10","eventItems","setEventItems","_useState11","_useState12","homeImpovementItems","setHomeImprovementItems","_useState13","_useState14","kitchenItems","setKitchenItems","_useState15","_useState16","miscItems","setMiscItems","_useState17","_useState18","recreationItems","setRecreationItems","_useState19","_useState20","yardItems","setYardItems","_useState21","_useState22","filterType","setFilterType","lowercaseFilter","toLowerCase","filterKeyword","RegExp","filteredListings","item","test","parseInt","category","yardCategoryRef","allCategoryRef","kitchenCategoryRef","homeCategoryRef","electronicsCategoryRef","eventsCategoryRef","miscCategoryRef","recreationCategoryRef","categories","title","items","handleScrollClick","target","element","direction","getAttribute","scrollBy","top","left","behavior","nameFilterCheck","handlePageChangeOnItemClick","htmlFor","checked","href","data-direction","data-category","length","Card_Card","Field","DropdownMenu","setSelected","extraFunction","ItemImage","image","data-cloudinary-field","data-form-data","uploadImage","ListingPage","setImage","lat","setLat","lng","setLng","setCategory","locationPref","setLocationPref","itemNameRef","descriptionRef","priceRef","streetRef","zipcodeRef","validateInputs","valid","currentPage","components_Field_Field","selectedCategory","locationValue","navigator","geolocation","getCurrentPosition","geolocateLat","coords","latitude","toFixed","geolocateLng","longitude","maxLength","components_ItemImage_ItemImage","files","formData","FormData","append","uploadImageToDB","secure_url","fullAddress","cb","ownerId","description","coordinates","pendingRequest","isRented","active","alert","addressState","zipcode","results","geometry","fetch","json","ItemRequestForm","useParams","startDate","setStartDate","endDate","setEndDate","react_datepicker_min_default","showPopperArrow","date","minDate","Date","now","placeholderText","formattedStartDate","getMonth","getDate","getFullYear","formattedEndDate","appointment","appointmentId","renterUserId","$push","currentAppointment","MessageOwnerButton","ownerEmail","setOwnerEmail","ItemInfo","owner","setOwner","MessageOwnerButton_MessageOwnerButton","ItemRequestForm_ItemRequestForm","WrapperMap","withScriptjs","withGoogleMap","lib","defaultZoom","center","radius","options","strokeColor","ItemMap","height","googleMapURL","loadingElement","containerElement","mapElement","ItemPage","ItemInfo_ItemInfo","NavTabs","tabs","tab","data-page","handlePageChange","ProfileItemContainer","rented","itemStatus","ReturnButton","SuccessButton","RejectButton","Profile","requests","setRequests","rentals","setRentals","returns","setReturns","listings","setListings","myHistory","setMyHistory","filterRequests","array","filteredItems","filterRentals","filterReturns","handleItemReturn","status","returnItem","filterOffItem","handleConfirmReturned","requestId","confirmReturn","appointmentData","removeRental","owned","handleAccept","approveRental","addRental","handleReject","declineRental","$pull","userId","components_NavTabs_NavTabs","nextPage","rentalHistory","listing","components_ProfileItemContainer","appointmentHistory","i","rental","components_ReturnButton","request","components_SuccessButton_SuccessButton","data-renterid","components_RejectButton_RejectButton","data-appointmentid","images","UpdateProfile","selectedIcon","setIcon","updateUserState","handleIconSelect","defaultValue","updatedUser","EditProfile","components_UpdateProfile_UpdateProfile","App","UserContext_UserProvider","react_router","exact","path","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9ba0cfca.chunk.js","sourcesContent":["export const SET_USER = \"UPDATE_USER\";\nexport const CLEAR_USER = \"CLEAR_USER\";","import React, { createContext, useReducer, useContext } from \"react\";\nimport {\n  SET_USER,\n  CLEAR_USER\n} from \"./UserActions\";\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case SET_USER:\n            return {\n                ...state,\n                user: action.user\n            };\n        case CLEAR_USER:\n            return {}\n        default : \n            return;\n    }\n}\n\nconst UserProvider = ({ value = [], ...props }) => {\n    const [state, dispatch] = useReducer(reducer, {});\n\n    return <Provider value={[state, dispatch]} {...props} />;\n}\n\nconst useStoreContext = () => {\n    return useContext(StoreContext);\n};\n\nexport { UserProvider, useStoreContext};\n","import React from 'react'\nimport './styles.css';\n\nconst FormField = (props) => {\n    return (\n        <div className={`field ${props.fieldClass ? props.filedClass : \"\"}`}>\n            <label className=\"label\">{props.label ? props.label : \"\"}</label>\n            {props.children}\n        </div>\n    )\n}\n\nexport default FormField;","import React from 'react'\nimport './styles.css';\n\nconst FormControl = (props) => {\n    return (\n        <div className={`control ${props.controlClass ? props.controlClass : \"\"}`}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default FormControl;","import React from 'react'\nimport './styles.css';\n\nconst FormIcon= (props) => {\n    return (\n        <span className={`icon is-${props.size} is-${props.side}`}>\n            <i className={`fas fa-${props.icon}`}></i>\n        </span>\n    )\n}\n\nexport default FormIcon; ","import React from 'react'\nimport './styles.css';\n\nconst FormHelp = (props) => {\n    return (\n        <p className={`help is-${props.type}`}>{props.message}</p>\n    )\n}\n\nexport default FormHelp;","import React from 'react';\nimport { Dropdown } from \"react-bulma-components\";\n\nconst StatesDropdown = (props) => {\n\n    const stateCodes = [ 'AL', 'AK', 'AS', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'DC', 'FM', 'FL', 'GA', 'GU', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MH', 'MD', 'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'MP', 'OH', 'OK', 'OR', 'PW', 'PA', 'PR', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VI', 'VA', 'WA', 'WV', 'WI', 'WY' ];\n\n    return(\n        <div className=\"select\">\n            <select ref={props.stateRef}>\n                <option value='default' disabled>Select State</option>\n                { stateCodes.map(state => {\n                    return <option key={ state } value={ state } selected={ state === props.defaultState ? true : false}> { state } </option>\n                }) }\n            </select>\n        </div>\n    )\n}\n\n\nexport default StatesDropdown;","import axios from 'axios';\n\n\n//get username and id for currently logged in user\nexport const getCurrentUser = () => {\n    return axios.get('/api/passport/user_data');\n}\n\n//get profile data for matching userId\n    // owned and rented are arrays of Item Objects\nexport const getProfile = (id) => {\n    return axios.get('api/profile/' + id);\n}\n\n//get profile data for all users \n    // owned and rented are arrays of Item ObjectId\nexport const getAllProfiles = () => {\n    return axios.get('api/profile/users');\n}\n\nexport const getAllItems = () => {\n    return axios.get('/api/items/all');\n}\n\nexport const getAllUnrentedItems = () => {\n    return axios.get('/api/items/all/unrented');\n}\n\nexport const getItem = (id) => {\n    return axios.get('/api/items/' + id)\n    // return axios.get('/api/items/' + id)\n}\n\nexport const renterRequest = (renterId, id ) => {\n    return axios.put('/api/items/' + id, renterId)\n}\n\nexport const rentalApprove = (id) => {\n    return axios.put('/api/items/' + id + '/rental-approve')\n}\n\nexport const rentalCancel = (id) => {\n    return axios.put('/api/appointment/cancel/' + id + '/rental-cancel')\n}\n\n// export const ownerCancel = (renterId, id ) => {\n//     return axios.put('/api/appointment/cancel/' + id)\n// }\n\n// Appointment APIs\nexport const postAppointment = (data) => {\n    return axios.post('/api/appointments', data)\n}\n\nexport const removeAppointment = (itemId, appointmentData) => {\n    return axios.put(`/api/items/appointments/${itemId}`, appointmentData)\n}\n\nexport const postListing = (data) => {\n    return axios.post('/api/items', data);\n}\n\nexport const getCoordinates = (fullAddress, cb) => {\n    fetch('https://api.opencagedata.com/geocode/v1/json?q=' + fullAddress + '&key=f8dc0563994c4035af8cbb25cf96dce7&language=en&pretty=1')\n    .then(response => response.json())\n    .then(data => {\n        cb(data);\n    })\n    .catch(err => console.log(err));\n}\n\nexport const loginUser = (userData) => {\n    return axios.post('/api/passport/login', userData);\n}\n\nexport const signupUser = (userData) => {\n    return axios.post('/api/passport/signup', userData)\n}\n\nexport const uploadImageToDB = (formData) => {\n    return axios.post('https://api.cloudinary.com/v1_1/djz8ibfox/image/upload', formData)\n}\n\nexport const logoutUser = () => {\n    return axios.get('/api/passport/logout');\n}\n\nexport const createProfile = (userData) => {\n    return axios.post('/api/profile', userData);\n}\n\nexport const updateProfile = (id, userData) => {\n    return axios.put('/api/profile/' + id, userData);\n}\n\nexport const addRental = (id, itemId) => {\n    return axios.put('/api/profile/rentals/' + id, itemId);\n}\n\nexport const removeRental = (id, itemId) => {\n    return axios.put(`/api/profile/rentals/remove/${id}`, itemId)\n}\n\nexport const addRentalHistory = (id, itemId) => {\n    return axios.put('/api/profile/history/' + id, itemId);\n}\n\nexport const addOwned = (id, itemId) => {\n    return axios.put('/api/profile/owned/' + id, itemId);\n}\n\nexport const deleteUser = (username) => {\n    return axios.delete('api/passport/' + username);\n}\n\nexport const approveRental = (id, status) => {\n    return axios.put(`/api/items/rentstatus/${id}`, status);\n}\n\nexport const declineRental = (id, status) => {\n    return axios.put(`/api/items/pendingstatus/${id}`, status);\n}\n\nexport const returnItem = (id, status) => {\n    return axios.put(`/api/items/rentstatus/${id}`, status)\n}\n\nexport const confirmReturn = (id, status) => {\n    return axios.put(`/api/items/rentstatus/${id}`, status)\n}\n\nexport const initMessage = (data) => {\n    return axios.post('/api/messages', data)\n}","// import React, { useRef, useState } from 'react';\n// import { useHistory } from 'react-router-dom';\n\n// import FormField from \"../FormField/FormField\";\n// import FormControl from \"../FormControl/FormControl\";\n// import FormIcon from \"../FormIcon/FormIcon\";\n// import FormHelp from \"../FormHelp/FormHelp\";\n// import StatesDropdown from \"../StatesDropdown/StatesDropdown\";\n\n// import { loginUser, signupUser, getCurrentUser, createProfile, getProfile, deleteUser } from '../../utils/API/API';\n\n// import { useStoreContext } from \"../../utils/UserContext/UserContext\";\n// import { SET_USER } from \"../../utils/UserContext/UserActions\";\n// import { Button, Section, Columns} from \"react-bulma-components\";\n\n\n// const UserForm = (props) => {\n//     const [state, dispatch] = useStoreContext();\n\n//     const setUserState = (user) => {\n//         dispatch({\n//             type: SET_USER,\n//             user: user\n//         });\n//     };\n\n//     //signup refs\n//     const usernameRef = useRef();\n//     const passwordRef = useRef();\n//     const firstNameRef = useRef();\n//     const lastNameRef = useRef();\n//     const emailRef = useRef();\n//     const addressRef = useRef();\n//     const cityRef = useRef();\n//     const stateRef = useRef();\n//     const zipCodeRef = useRef();\n\n//     const [signupErrorState, setSignupError] = useState({ error: false });\n\n//     const profileInputs = [usernameRef, passwordRef, firstNameRef, lastNameRef, emailRef, zipCodeRef, addressRef, cityRef, stateRef];\n\n//     const history = useHistory();\n\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n\n//         // for signup\n//         const newUser = {\n//             firstName: firstNameRef.current.value,\n//             lastName: lastNameRef.current.value,\n//             username: usernameRef.current.value,\n//             address: addressRef.current.value,\n//             city: cityRef.current.value,\n//             state: stateRef.current.value,\n//             zipCode: zipCodeRef.current.value,\n//             email: emailRef.current.value,\n//             password: passwordRef.current.value\n//         }\n\n//         // for login\n//         const user = {\n//             username: usernameRef.current.value,\n//             password: passwordRef.current.value\n//         }\n\n//         signupUser(user)\n//             .then(() => {\n//                 //signup success\n//                 setSignupError({ error: null});\n//                 createProfile(newUser)\n//                     .then(res => {\n//                         loginHelper(user);\n//                         // reset form\n//                         profileInputs.forEach(input => input.current.value = '');\n//                     })\n//                     .catch(err => {\n\n//                         //delete user from passport if profile create fails\n//                         deleteUser(newUser.username);\n\n//                         if (err.response.data.err.errors) {\n//                             // missing field errors\n//                             setSignupError(err.response.data.err.errors);\n\n//                         } else if (err.response.data.err.keyValue){\n//                             //mongodb errors\n//                             if (err.response.data.err.keyValue.email) {\n//                                 //duplicate email error\n//                                 setSignupError({ \n//                                     email: true, \n//                                     message: \"Email has already been registered\"\n//                                  });\n//                             }\n//                         } else {\n//                             setSignupError(err.response.data);\n//                         }\n                        \n//                     })\n//             })\n//             .catch(err => {\n//                 // signup fail\n//                 setSignupError(err.response.data.err ? err.response.data.err : err.response.data);\n//             });\n//     }\n\n//     const loginHelper = (user) => {\n//         loginUser(user)\n//         .then(() => {\n//             // login success -> get user profile -> set user state\n//             getCurrentUser().then(res => {\n//                 getProfile(res.data.user._id)\n//                     .then(res => {\n//                         setUserState(res.data[0]);\n//                         history.push(\"/\");\n//                 });\n//             })\n//             .catch(err => {\n//                 setSignupError(err.response.data);\n//             })\n//         });\n//     };\n\n//     return (\n//         <Section>\n//             <div className=\"container notification is-info is-light\">\n//                 <h1>Sign Up</h1>\n//                 <Columns>\n//                     <Columns.Column>\n//                         <FormField label=\"First Name\" >\n//                             <FormControl>\n//                                 <input className={`input ${signupErrorState.firstName ? \"is-danger\" : \"\"}`} type=\"text\" placeholder=\"Alex\" ref={firstNameRef} />\n//                             </FormControl>\n//                         </FormField>\n//                     </Columns.Column>\n//                     <Columns.Column>\n//                         <FormField label=\"Last Name\">\n//                             <FormControl>\n//                                 <input className={`input ${signupErrorState.lastName ? \"is-danger\" : \"\"}`} type=\"text\" placeholder=\"Lee\" ref={lastNameRef} />\n//                             </FormControl>\n//                         </FormField>\n//                     </Columns.Column>\n//                 </Columns>\n//                 <FormField label=\"Email\">\n//                     <FormControl controlClass=\"has-icons-left has-icons-right\">\n//                         <input\n//                             className={`input ${signupErrorState.email ? \"is-danger\" : \"\"}`}\n//                             type=\"email\"\n//                             placeholder=\"Email input\"\n//                             ref={emailRef} />\n//                         <FormIcon size=\"small\" side=\"left\" icon=\"envelope\" />\n//                         <FormIcon size=\"small\" side=\"right\" icon=\"exclamation-triangle\" />\n//                     </FormControl>\n//                 </FormField>\n//                 <FormField label=\"Address\">\n//                     <FormControl>\n//                         <input className=\"input\" type=\"text\" placeholder=\"5555 N Main St\" ref={addressRef} />\n//                     </FormControl>\n//                 </FormField>\n//                 <Columns>\n//                     <Columns.Column>\n//                         <FormField label=\"City\">\n//                             <FormControl>\n//                                 <input className=\"input\" type=\"text\" placeholder=\"Seattle\" ref={cityRef} />\n//                             </FormControl>\n//                         </FormField>\n//                     </Columns.Column>\n//                     <Columns.Column className=\"is-narrow\">\n//                         <FormField label=\"State\">\n//                             <FormControl>\n//                                 <StatesDropdown stateRef={stateRef}></StatesDropdown>\n//                             </FormControl>\n//                         </FormField>\n//                     </Columns.Column>\n//                     <Columns.Column className=\"is-narrow\">\n//                         <FormField label=\"Zip Code\">\n//                             <FormControl>\n//                                 <input className={`input ${signupErrorState.zipCode ? \"is-danger\" : \"\"}`} type=\"text\" placeholder=\"98001\" ref={zipCodeRef} />\n//                             </FormControl>\n//                         </FormField>\n//                     </Columns.Column>\n//                 </Columns>\n//                 <FormField label=\"Username\">\n//                     <FormControl controlClass=\"has-icons-left has-icons-right\">\n//                         <input\n//                             className={`input ${signupErrorState.name === \"UserExistsError\" ? \"is-danger\" : \"\"}`}\n//                             type=\"text\"\n//                             placeholder=\"Username\"\n//                             ref={usernameRef} />\n//                         <FormIcon size=\"small\" side=\"left\" icon=\"user\" />\n//                         <FormIcon size=\"small\" side=\"right\" icon=\"check\" />\n//                     </FormControl>\n//                 </FormField>\n//                 <FormField label=\"Password\">\n//                     <FormControl controlClass=\"has-icons-left has-icons-right\">\n//                         <input\n//                             className={`input ${signupErrorState.name === \"MissingPasswordError\" ? \"is-danger\" : \"\"}`}\n//                             type=\"password\"\n//                             placeholder=\"Enter a secure password\"\n//                             ref={passwordRef} />\n//                         <FormIcon size=\"small\" side=\"left\" icon=\"lock\" />\n//                         <FormIcon size=\"small\" side=\"right\" icon=\"exclamation-triangle\" />\n//                     </FormControl>\n//                 </FormField>\n//                 <div className=\"field\">\n//                     <Button style={ { width: \"75px\" } } className=\"button is-link\" type=\"submit\" onSubmit={handleSubmit}>Submit</Button>\n//                     <FormHelp type=\"danger\" message={signupErrorState ? signupErrorState.message : \"\"} />\n//                 </div>\n//             </div>\n//         </Section>\n//     );\n// }\n\n// export default UserForm;\n\nimport React, { useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport FormField from \"../FormField/FormField\";\nimport FormControl from \"../FormControl/FormControl\";\nimport FormIcon from \"../FormIcon/FormIcon\";\nimport FormHelp from \"../FormHelp/FormHelp\";\nimport StatesDropdown from \"../StatesDropdown/StatesDropdown\";\n\nimport { loginUser, signupUser, getCurrentUser, createProfile, getProfile, deleteUser } from '../../utils/API/API';\n\nimport { useStoreContext } from \"../../utils/UserContext/UserContext\";\nimport { SET_USER } from \"../../utils/UserContext/UserActions\";\nimport { Button, Section, Columns} from \"react-bulma-components\";\n\n\nconst UserForm = (props) => {\n    const [state, dispatch] = useStoreContext();\n\n    const setUserState = (user) => {\n        dispatch({\n            type: SET_USER,\n            user: user\n        });\n    };\n\n    //signup refs\n    const usernameRef = useRef();\n    const passwordRef = useRef();\n    const firstNameRef = useRef();\n    const lastNameRef = useRef();\n    const emailRef = useRef();\n    const addressRef = useRef();\n    const cityRef = useRef();\n    const stateRef = useRef();\n    const zipCodeRef = useRef();\n\n    const [signupErrorState, setSignupError] = useState({ error: false });\n\n    const profileInputs = [usernameRef, passwordRef, firstNameRef, lastNameRef, emailRef, zipCodeRef, addressRef, cityRef, stateRef];\n\n    const history = useHistory();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        // for signup\n        const newUser = {\n            firstName: firstNameRef.current.value,\n            lastName: lastNameRef.current.value,\n            username: usernameRef.current.value,\n            address: addressRef.current.value,\n            city: cityRef.current.value,\n            state: stateRef.current.value,\n            zipCode: zipCodeRef.current.value,\n            email: emailRef.current.value,\n            password: passwordRef.current.value\n        }\n\n        // for login\n        const user = {\n            username: usernameRef.current.value,\n            password: passwordRef.current.value\n        }\n\n        signupUser(user)\n            .then(() => {\n                //signup success\n                setSignupError({ error: null});\n                createProfile(newUser)\n                    .then(res => {\n                        loginHelper(user);\n                        // reset form\n                        profileInputs.forEach(input => input.current.value = '');\n                    })\n                    .catch(err => {\n\n                        //delete user from passport if profile create fails\n                        deleteUser(newUser.username);\n\n                        if (err.response.data.err.errors) {\n                            // missing field errors\n                            setSignupError(err.response.data.err.errors);\n\n                        } else if (err.response.data.err.keyValue){\n                            //mongodb errors\n                            if (err.response.data.err.keyValue.email) {\n                                //duplicate email error\n                                setSignupError({ \n                                    email: true, \n                                    message: \"Email has already been registered\"\n                                 });\n                            }\n                        } else {\n                            setSignupError(err.response.data);\n                        }\n                        \n                    })\n            })\n            .catch(err => {\n                // signup fail\n                setSignupError(err.response.data.err ? err.response.data.err : err.response.data);\n            });\n    }\n\n    const loginHelper = (user) => {\n        loginUser(user)\n        .then(() => {\n            // login success -> get user profile -> set user state\n            getCurrentUser().then(res => {\n                getProfile(res.data.user._id)\n                    .then(res => {\n                        setUserState(res.data[0]);\n                        history.push(\"/\");\n                });\n            })\n            .catch(err => {\n                setSignupError(err.response.data);\n            })\n        });\n    };\n\n    return (\n        <Section>\n            <div className=\"container notification is-info is-light\">\n                <h1>Sign Up</h1>\n                <Columns>\n                    <Columns.Column>\n                        <FormField label=\"First Name\" >\n                            <FormControl>\n                                <input className={`input ${signupErrorState.firstName ? \"is-danger\" : \"\"}`} type=\"text\" placeholder=\"Alex\" ref={firstNameRef} />\n                            </FormControl>\n                        </FormField>\n                    </Columns.Column>\n                    <Columns.Column>\n                        <FormField label=\"Last Name\">\n                            <FormControl>\n                                <input className={`input ${signupErrorState.lastName ? \"is-danger\" : \"\"}`} type=\"text\" placeholder=\"Lee\" ref={lastNameRef} />\n                            </FormControl>\n                        </FormField>\n                    </Columns.Column>\n                </Columns>\n                <FormField label=\"Email\">\n                    <FormControl controlClass=\"has-icons-left has-icons-right\">\n                        <input\n                            className={`input ${signupErrorState.email ? \"is-danger\" : \"\"}`}\n                            type=\"email\"\n                            placeholder=\"Email input\"\n                            ref={emailRef} />\n                        <FormIcon size=\"small\" side=\"left\" icon=\"envelope\" />\n                        <FormIcon size=\"small\" side=\"right\" icon=\"exclamation-triangle\" />\n                    </FormControl>\n                </FormField>\n                <FormField label=\"Address\">\n                    <FormControl>\n                        <input className=\"input\" type=\"text\" placeholder=\"5555 N Main St\" ref={addressRef} />\n                    </FormControl>\n                </FormField>\n                <Columns>\n                    <Columns.Column>\n                        <FormField label=\"City\">\n                            <FormControl>\n                                <input className=\"input\" type=\"text\" placeholder=\"Seattle\" ref={cityRef} />\n                            </FormControl>\n                        </FormField>\n                    </Columns.Column>\n                    <Columns.Column className=\"is-narrow\">\n                        <FormField label=\"State\">\n                            <FormControl>\n                                <StatesDropdown stateRef={stateRef}></StatesDropdown>\n                            </FormControl>\n                        </FormField>\n                    </Columns.Column>\n                    <Columns.Column className=\"is-narrow\">\n                        <FormField label=\"Zip Code\">\n                            <FormControl>\n                                <input className={`input ${signupErrorState.zipCode ? \"is-danger\" : \"\"}`} type=\"text\" placeholder=\"98001\" ref={zipCodeRef} />\n                            </FormControl>\n                        </FormField>\n                    </Columns.Column>\n                </Columns>\n                <FormField label=\"Username\">\n                    <FormControl controlClass=\"has-icons-left has-icons-right\">\n                        <input\n                            className={`input ${signupErrorState.name === \"UserExistsError\" ? \"is-danger\" : \"\"}`}\n                            type=\"text\"\n                            placeholder=\"Username\"\n                            ref={usernameRef} />\n                        <FormIcon size=\"small\" side=\"left\" icon=\"user\" />\n                        <FormIcon size=\"small\" side=\"right\" icon=\"check\" />\n                    </FormControl>\n                </FormField>\n                <FormField label=\"Password\">\n                    <FormControl controlClass=\"has-icons-left has-icons-right\">\n                        <input\n                            className={`input ${signupErrorState.name === \"MissingPasswordError\" ? \"is-danger\" : \"\"}`}\n                            type=\"password\"\n                            placeholder=\"Enter a secure password\"\n                            ref={passwordRef} />\n                        <FormIcon size=\"small\" side=\"left\" icon=\"lock\" />\n                        <FormIcon size=\"small\" side=\"right\" icon=\"exclamation-triangle\" />\n                    </FormControl>\n                </FormField>\n                <div className=\"field\">\n                    <Button style={ { width: \"75px\" } } className=\"button is-link\" type=\"submit\" onClick={handleSubmit}>Submit</Button>\n                    <FormHelp type=\"danger\" message={signupErrorState ? signupErrorState.message : \"\"} />\n                </div>\n            </div>\n        </Section>\n    );\n}\n\nexport default UserForm;","import React from 'react'\nimport './styles.css';\nimport { logoutUser } from '../../utils/API/API';\nimport { useStoreContext } from \"../../utils/UserContext/UserContext\";\nimport { CLEAR_USER } from \"../../utils/UserContext/UserActions\";\nimport { useHistory } from 'react-router-dom';\n\nconst LogoutButton = (props) => {\n    const [state, dispatch] = useStoreContext();\n    const history = useHistory();\n\n    const clearUserState = () => {\n        dispatch({\n            type: CLEAR_USER\n        });\n    };\n    \n    const handleLogout = (e) => {\n        logoutUser()\n            .then(() => {\n                clearUserState();\n                history.push('/');\n            })\n    }\n\n    return (\n        <button onClick={handleLogout} className=\"button is-danger is-light\">Logout</button>\n    )\n}\n\nexport default LogoutButton;","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nconst SignUpButton = () => {\n    return (\n        <NavLink to=\"/signup\" className=\"button is-primary\">\n            <p>Sign Up</p>\n        </NavLink>\n    );\n}\n\nexport default SignUpButton;","import React, { useState } from 'react';\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport './styles.css';\nimport { useStoreContext } from \"../../utils/UserContext/UserContext\";\nimport {Navbar} from 'react-bulma-components';\nimport LogoutButton from \"../LogoutButton/LogoutButton\";\nimport SignUpButton from '../SignUpButton';\nimport { set } from 'mongoose';\n\nconst Nav = (props) => {\n    const [state, dispatch] = useStoreContext();\n    const [toggle, setToggle] = useState({\n        currentClassName: \"\",\n        isClicked: true,\n        mobileColor: \"\"\n    });\n\n    let location = useLocation();\n\n    const handleBurgerToggle = () => {\n        if (toggle.isClicked) {\n            setToggle({isClicked: false, currentClassName: \"is-active\", mobileColor: \" is-primary is-light\"});\n        } else {\n            setToggle({currentClassName: \"\", isClicked: true});\n        }\n        console.log(toggle);\n    }\n\n    return (\n        <Navbar\n            color = \"primary\"\n            className=\"is-fixed-top\"\n        >\n            <Navbar.Brand>\n                {/* don't show logo on navbar on homepage */}\n                {location.pathname === \"/\" ? \"\" : \n                <Navbar.Item>\n                    <NavLink to=\"/\" className=\"inactive\" activeClassName=\"is-active\"><h1>SHAREISH</h1></NavLink>\n                </Navbar.Item> }\n                <Navbar.Burger className={toggle.currentClassName} onClick={handleBurgerToggle} />\n            </Navbar.Brand>\n            {/* menu collapses into burger on mobile */}\n            { location.pathname === \"/signup\" ? \n            <Navbar.Menu className={`${toggle.currentClassName} is-right`} color={toggle.mobileColor}>\n                <Navbar.Container position=\"end\">\n                    <Navbar.Dropdown className=\"is-right\">\n                        <NavLink to=\"/\" className=\"navbar-item\">Home</NavLink>\n                        <NavLink to=\"/listings\" className=\"navbar-item\" activeClassName=\"is-active\">Browse Listings</NavLink>\n                    </Navbar.Dropdown>\n                </Navbar.Container>\n            </Navbar.Menu> :\n            <Navbar.Menu className={`${toggle.currentClassName} is-right`} color={toggle.mobileColor}>\n                <Navbar.Container position=\"end\">\n                {/* if user is logged in, display this */}\n                {state.user ? \n                    <Navbar.Item dropdown hoverable>\n                        <Navbar.Item className=\"user\">\n                            { state.user ? <p>{state.user.username}</p> : \"\"}\n                            <img style={ { marginLeft: \"10px\"} } src={state.user ? state.user.icon : \"\"} />\n                        </Navbar.Item>\n                        <Navbar.Dropdown className=\"is-right\">\n                            <NavLink className=\"navbar-item\" to=\"/profile\">Profile</NavLink> \n                        {location.pathname !== \"/newlisting\" ?\n                            <NavLink to=\"/newlisting\" className=\"navbar-item\" activeClassName=\"is-active\">Post a Listing</NavLink>    \n                            : \"\"}\n                        {location.pathname !== \"/listings\" ?\n                            <NavLink to=\"/listings\" className=\"navbar-item\" activeClassName=\"is-active\">Browse Listings</NavLink>    \n                            : \"\"}\n                        <Navbar.Item>\n                            <LogoutButton />        \n                        </Navbar.Item>\n                        </Navbar.Dropdown>\n                    </Navbar.Item>\n                :\n                <Navbar.Item> \n                    <p>\n                        {!toggle.isClicked ? <NavLink to=\"/signup\" className=\"navbar-item\" activeClassName=\"is-active\">Signup</NavLink>:\n                    <SignUpButton />}\n                    </p>\n                </Navbar.Item>}\n                </Navbar.Container>\n            </Navbar.Menu>}\n        </Navbar>      \n    );\n}\n\nexport default Nav;","import React, {useRef, useState } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport FormField from \"../FormField/FormField\";\nimport FormControl from \"../FormControl/FormControl\";\nimport { Columns, Container, Section } from \"react-bulma-components\";\nimport FormIcon from \"../FormIcon/FormIcon\";\nimport { loginUser, getCurrentUser, getProfile } from '../../utils/API/API';\nimport { useStoreContext } from \"../../utils/UserContext/UserContext\";\nimport { SET_USER } from \"../../utils/UserContext/UserActions\";\n\nconst NavLogin = () => {\n    const [state, dispatch] = useStoreContext();\n\n    const setUserState = (user) => {\n        dispatch({\n            type: SET_USER,\n            user: user\n        });\n    };\n        \n    // login refs\n    const usernameLoginRef = useRef();\n    const passwordLoginRef = useRef();\n    const loginInputs = [usernameLoginRef, passwordLoginRef];\n\n    // error context\n    const [loginErrorState, setLoginError] = useState({});\n\n    // handle redirect\n    const history = useHistory();\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n\n        const user = {\n            username: usernameLoginRef.current.value,\n            password: passwordLoginRef.current.value\n        }\n\n        loginUser(user)\n            .then(res => {\n                // login success  -> get user profile -> set user state\n                setLoginError({ error: false });\n                getCurrentUser().then(res => {\n                    getProfile(res.data.user._id)\n                        .then(res => {\n                            setUserState(res.data[0]);\n                            history.push(\"/\");\n                    });\n                });\n            })\n            .catch(err => {\n                setLoginError({ error: true, message: \"Incorrect username/password combination\" });\n            })\n\n        // reset form\n        loginInputs.forEach(input => input.current.value = '' );           \n    }\n\n    return (\n        <Section>\n            <Container class=\"notification\">\n                <div className=\"title\">Welcome back</div>\n                <h1>Log In</h1>\n                <br></br>\n                <Columns>\n                <Columns.Column>\n                    <form onSubmit={handleLogin}>\n                    <FormField>\n                        <FormControl controlClass=\"has-icons-left\">\n                            <input \n                                className={`input ${ loginErrorState.error ? \"is-danger\" : \"\" }`}\n                                type=\"text\"\n                                placeholder=\"Username\"\n                                ref={usernameLoginRef} />\n                            <FormIcon size=\"small\" side=\"left\" icon=\"user\" />\n                        </FormControl>\n                    </FormField>\n                    <FormField>\n                        <FormControl controlClass=\"has-icons-left has-icons-right\">\n                            <input \n                                className={`input ${ loginErrorState.error ? \"is-danger\" : \"\" }`}\n                                type=\"password\"\n                                placeholder=\"Password\"\n                                ref={passwordLoginRef} />\n                            <FormIcon size=\"small\" side=\"left\" icon=\"lock\" />\n                            <FormIcon size=\"small\" side=\"right\" icon=\"exclamation-triangle\" />\n                        </FormControl>\n                    </FormField>\n                    <FormControl>\n                            <input className=\"button is-info\" type=\"submit\" value=\"Log In\" />\n                    </FormControl>\n                    </form>\n                </Columns.Column>\n                <Columns.Column className=\"is-horizontal is-narrow\">\n                    <FormField fieldClass=\"is-horizontal\">\n                        { loginErrorState.error ? <div className=\"has-text-danger\">{loginErrorState.message}</div>  : <></> }\n                    </FormField>\n                </Columns.Column>\n            </Columns>\n            </Container>\n        </Section>\n    )\n}\n\nexport default NavLogin;","import React from 'react'\nimport UserForm from '../../components/UserForm/UserForm';\nimport Nav from '../../components/Nav/Nav';\nimport NavLogin from '../../components/NavLogin/NavLogin';\nimport { Columns, Container } from \"react-bulma-components\";\n\nconst Signup = () => {\n    return (\n        <div className='signup-page'>\n            <Nav />\n            <Container>\n                <Columns>\n                    <Columns.Column>\n                        <NavLogin />\n                    </Columns.Column>\n                    <Columns.Column>\n                        <UserForm />\n                    </Columns.Column>\n                </Columns>\n            </Container>\n        </div>\n    )\n}\n\nexport default Signup;\n","import React, { useState } from \"react\";\nimport { Container } from \"react-bulma-components\";\nimport \"./styles.css\";\n\nfunction SearchBar(props) {\n    // const [state, setState] = useState();\n    return (\n        <Container>\n            <form className=\"tile field has-addons\">\n                <div className=\"control is-expanded\">\n                    <input \n                        className=\"input\"\n                        value={props.search}\n                        onChange={props.handleInputChange}\n                        name=\"term\"\n                        type=\"text\"\n                        placeholder=\"What are you looking for?\"\n                        id=\"term\"\n                        ref={props.reference}\n                    />\n                </div>\n                <div className=\"control\">\n                    <button className=\"button is-info\" onClick={props.handleSearch}>\n                        <span className=\"icon\">\n                            <i className=\"fas fa-search\"></i>\n                        </span>\n                    </button>\n                </div>\n            </form>\n        </Container>\n    );\n}\n\nexport default SearchBar;","import React, { useRef } from \"react\";\nimport \"./styles.css\";\nimport SearchBar from \"../SearchBar\";\nimport { Navbar } from \"react-bulma-components\";\n\nimport { useStoreContext } from \"../../utils/UserContext/UserContext\";\nimport { useLocation } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport Nav from \"../Nav/Nav\";\n\nfunction Hero(props) {\n\n    const [state, dispatch] = useStoreContext();\n    const location = useLocation();\n\n    const searchTermRef = useRef();\n    const history = useHistory();\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n\n        console.log(searchTermRef.current.value);\n        localStorage.setItem('searchTerm', searchTermRef.current.value);\n        history.push('/listings');\n    }\n    \n    return (\n        <section className=\"hero is-primary is-small\">\n            {/* <!-- Hero head: will stick at the top --> */}\n            <div className=\"hero-head is-fixed-top\"> \n                <Nav />\n            </div>\n\n            {/* <!-- Hero content: will be in the middle --> */}\n            <div className=\"hero-body is-fixed-top\">\n                <div className=\"container has-text-centered\">\n                <h1 className=\"title\">\n                    Shareish!\n                </h1>\n                <h2 className=\"subtitle\">\n                    share what you cherish\n                </h2>\n                </div>\n                <br></br>\n                <SearchBar reference={searchTermRef} handleSearch={handleSearch}/>\n            </div>\n        </section>\n    );\n}\n\nexport default Hero;","import React, { useState, useEffect } from 'react';\nimport './styles.css';\n\n//user context\nimport { useStoreContext } from \"../../utils/UserContext/UserContext\";\nimport { SET_USER } from \"../../utils/UserContext/UserActions\";\nimport {getCurrentUser, getProfile} from '../../utils/API/API';\n\n//pages\nimport Hero from '../../components/Hero/Hero';\nimport { Section, Container, Tile, Heading, Columns } from \"react-bulma-components\";\nimport { Link } from 'react-router-dom';\n\n\nconst Home = () => {\n    // initialize user state -- checks if there is a user logged in \n    const [state, dispatch] = useStoreContext();\n    const options = [\n        {\n            message: \"Post a Listing\",\n            color: \"is-primary is-light is-outlined\",\n            link:\"newlisting\"\n        },\n        {\n            message:\"Browse Listings\",\n            color: \"is-primary\",\n            link: \"listings\"\n        },\n        {\n            message: \"View Your Profile\",\n            color: \"is-primary is-light is-outlined\",\n            link: \"profile\"\n        }\n    ];\n    \n    // grab user data from profile?\n    const setUserState = (user) => {\n        dispatch({\n            type: SET_USER,\n            user: user\n        });\n        console.log(user);\n    };\n    \n    useEffect(()=>{\n        if (!state.user) {\n            getCurrentUser().then(res => {\n                if (res.data.user) {\n                    getProfile(res.data.user._id)\n                        .then(res => {\n                            setUserState(res.data[0]);\n                    });\n                }\n            });\n        }\n    }, []);\n    \n    return (\n        <div>\n            <div className = 'navbar is-fixed-top is-primary'>\n            </div>\n            <Hero />\n            <Section>\n                <Tile\n                    kind=\"ancestor\"\n                >\n                    <Tile kind=\"parent\">\n                        <Tile renderAs=\"article\" kind=\"child\" notification>\n                        <Heading className=\"has-text-centered\">{state.user ? `Welcome, ${state.user.username}!` : \"Welcome!\"}</Heading>\n                        </Tile>\n                    </Tile>\n                </Tile>\n            </Section>\n            <Section>\n                <Container>\n                    <Columns>\n                        {options.map(option =>  \n                            <Columns.Column>\n                                <Link to={\"/\" + option.link} activeClassName=\"is-active\">\n                                    <div key={option.link} className={\"notification has-text-centered \" + option.color}>\n                                    {option.message}\n                                    </div>    \n                                </Link> \n                            </Columns.Column>\n                        )}\n                    </Columns>\n                </Container>\n            </Section>\n        </div>\n    );\n}\n\nexport default Home;","import React from \"react\";\nimport './styles.css';\n\nfunction Card(props) {\n    return (\n        <div className={\"box item has-text-centered\"} key={props._id} data-id={props.itemId} onClick={props.handleItemClick}>\n                <figure class=\"item-figure center\" data-id={props.itemId} onClick={props.handleItemClick}>\n                    <img className=\"item-image\" data-id={props.itemId} src={props.img} alt ='' onClick={props.handleItemClick}></img>\n                </figure>\n            <div className=\"is-mobile\">\n                <h2 className=\"mobile-font\" data-id={props.itemId} onClick={props.handleItemClick}>{props.itemName}</h2>\n                <h2 className=\"mobile-font\" data-id={props.itemId} onClick={props.handleItemClick}>${props.price}/day</h2>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Card;","import React, {useRef, useState, useEffect, useContext} from 'react'\nimport './styles.css';\nimport Nav from '../../components/Nav/Nav';\nimport { useHistory } from 'react-router-dom';\n// import Columns from '../../components/Columns/Columns';\nimport Column from '../../components/Column/Column';\nimport Card from '../../components/Card/Card';\nimport Title from '../../components/Title/Title';\nimport { Container, Columns } from \"react-bulma-components\";\nimport {getAllUnrentedItems, getAllItems} from '../../utils/API/API';\n\nconst Listings = (props) => {\n    const filterRef = useRef();\n\n    useEffect(() => {\n        console.log('happened')\n        getAllUnrentedItems()\n        .then(res => {\n            console.log(res.data);\n            console.log('function happened')\n            setAllItems(res.data);\n        })\n        .catch(err => console.log(err))\n        const searchTerm = localStorage.getItem('searchTerm');;\n        setFilter(searchTerm);\n        filterRef.current.value = searchTerm;\n        localStorage.removeItem('searchTerm');\n    }, [])\n\n    const [allItems, setAllItems] = useState([])\n    const [filter, setFilter] = useState();\n    const [filtered, setFiltered] = useState([...allItems]);\n    const [electonicsItems, setElectronicsItems] = useState([])\n    const [eventItems, setEventItems] = useState([]);\n    const [homeImpovementItems, setHomeImprovementItems] = useState([]);\n    const [kitchenItems, setKitchenItems] = useState([]);\n    const [miscItems, setMiscItems] = useState([]);\n    const [recreationItems, setRecreationItems] = useState([]);\n    const [yardItems, setYardItems] = useState([]);\n    const [filterType, setFilterType] = useState('name');\n\n    useEffect(()=> {\n        switch(filterType){\n            case 'name':\n                let lowercaseFilter;\n                if(filter) {\n                    lowercaseFilter = filter.toLowerCase();\n                }\n                const filterKeyword = new RegExp(lowercaseFilter);\n                let filteredListings = allItems.filter(item => {\n                    return filterKeyword.test(item.name.toLowerCase());\n                });\n                setFiltered(filteredListings);\n            break;\n            case 'price':\n                if(!filter){\n                    setFiltered(allItems);\n                } else{\n                filteredListings = allItems.filter(item => {\n                    return parseInt(item.price) <= parseInt(filter);\n                })\n                setFiltered(filteredListings);\n                }\n            break;\n            default:\n                setFiltered(allItems);\n        }\n    }, [filter, allItems, filterType])\n\n    useEffect(()=>{\n        let filteredListings = filtered.filter(item => {\n            return item.category === 'Electronics'\n        })\n        setElectronicsItems(filteredListings)\n    }, [filtered, filter])\n\n    useEffect(()=>{\n        let filteredListings = filtered.filter(item => {\n            return item.category === 'Events'\n        })\n        setEventItems(filteredListings)\n    }, [filtered])\n\n    useEffect(()=>{\n        let filteredListings = filtered.filter(item => {\n            return item.category === 'Home Improvement'\n        })\n        setHomeImprovementItems(filteredListings)\n    }, [filtered])\n\n    useEffect(()=>{\n        let filteredListings = filtered.filter(item => {\n            return item.category === 'Kitchen Appliances'\n        })\n        setKitchenItems(filteredListings)\n    }, [filtered])\n\n    useEffect(()=>{\n        let filteredListings = filtered.filter(item => {\n            return item.category === 'Miscellaneous'\n        })\n        setMiscItems(filteredListings)\n    }, [filtered])\n\n    useEffect(()=>{\n        let filteredListings = filtered.filter(item => {\n            return item.category === 'Recreation'\n        })\n        setRecreationItems(filteredListings)\n    }, [filtered])\n\n    useEffect(()=>{\n        let filteredListings = filtered.filter(item => {\n            return item.category === 'Yardwork'\n        })\n        setYardItems(filteredListings)\n    }, [filtered])\n\n    const yardCategoryRef = useRef();\n    const allCategoryRef = useRef();\n    const kitchenCategoryRef = useRef();\n    const homeCategoryRef = useRef();\n    const electronicsCategoryRef = useRef();\n    const eventsCategoryRef = useRef();\n    const miscCategoryRef = useRef();\n    const recreationCategoryRef = useRef();\n\n    const categories = [\n        {\n            id: \"all\",\n            title: \"All\",\n            ref: allCategoryRef,\n            items: filtered,\n            color: \"is-info\"\n        },\n        {\n            id: \"electronics\",\n            title: \"Electronics\",\n            ref: electronicsCategoryRef,\n            items: electonicsItems,\n            color: \"is-warning\"\n        },\n        {\n            id: \"events\",\n            title: \"Events\",\n            ref: eventsCategoryRef,\n            items: eventItems,\n            color: \"is-danger\"\n        },\n        {\n            id: \"home-imp\",\n            title: \"Home Improvement\",\n            ref: homeCategoryRef,\n            items:homeImpovementItems,\n            color: \"is-link\"\n        },\n        {\n            id: \"kitchen\",\n            title: \"Kitchen\",\n            ref: kitchenCategoryRef,\n            items: kitchenItems,\n            color: \"is-warning\"\n\n        },\n        {\n            id: \"recreation\",\n            title: \"Recreation\",\n            ref: recreationCategoryRef,\n            items: recreationItems,\n            color: \"is-danger\"\n        },\n        {\n            id: \"yard\",\n            title: \"Yard\",\n            ref: yardCategoryRef,\n            items: yardItems,\n            color: \"is-success\"\n        },\n        {\n            id: \"misc\",\n            title: \"Miscellaneous\",\n            ref: miscCategoryRef,\n            items: miscItems,\n            color: \"is-light\"\n        }\n    ];\n\n    const handleScrollClick = (e) => {\n        console.log(e.target);\n        const direction = e.target.getAttribute('data-direction');\n        const category = e.target.getAttribute('data-category');\n        console.log(category);\n        let element;\n        switch(category){\n            case 'All':\n                element = allCategoryRef;\n            break;\n            case 'Electronics':\n                element = electronicsCategoryRef;\n            break;\n            case 'Events':\n                element = eventsCategoryRef;\n            break;\n            case 'Yardwork':\n                element = yardCategoryRef;\n            break;\n            case 'Kitchen Appliances':\n                element = kitchenCategoryRef;\n            break;\n            case 'Home Improvement':\n                element = homeCategoryRef;\n            break;\n            case 'Miscellaneous':\n                element = miscCategoryRef;\n            break;\n            case 'Recreation':\n                element = recreationCategoryRef;\n            break;\n            default:\n                element = allCategoryRef;\n        }\n        switch(direction){\n            case 'left':\n                element.current.scrollBy({\n                    top: 0, \n                    left: -400,\n                    behavior: 'smooth'\n                });\n            break;\n            case 'right':\n                element.current.scrollBy({\n                    top: 0, \n                    left: 400,\n                    behavior: 'smooth'\n                });\n            break;\n            default:\n                console.log('nothing happened');\n        };\n    };\n\n    const history = useHistory();\n\n    const nameFilterCheck = (e) => {\n        setFilterType(e.target.value);\n    }\n\n    const handlePageChangeOnItemClick = (e) => {\n        console.log(e.target);\n        const id = e.target.getAttribute('data-id')\n        console.log(id);\n        history.push(`/items/${id}`);\n    }\n\n\n    return (\n            <div className='listings-page'>\n                <Nav />\n                <section className = 'section'>\n                    <Columns>\n                        <Columns.Column size={3}>\n                            <div className=\"mobilebar\">\n                                <p>Select filter type</p>\n                                {filterType === 'price' ?\n                                <ul id='filters'>\n            \n                                    <li>\n                                    <input type='radio' id='nameFilter' value='name' name='filter'onChange={nameFilterCheck}></input>\n                                    <label htmlFor='nameFilter'>Name</label>\n                                    </li>\n                                    <li>\n                                    <input type='radio' id='priceFilter' value='price' name='filter' onChange={nameFilterCheck} checked></input>\n                                    <label htmlFor='priceFilter'>Price</label>\n                                    </li>\n                                </ul>\n                                     :\n                                <ul id='filters'>\n                                    <li>\n                                        <input type='radio' id='nameFilter' value='name' name='filter' checked onChange={nameFilterCheck}></input>\n                                        <label htmlFor='nameFilter'>Name</label>\n                                    </li>\n                                    <li>\n                                        <input type='radio' id='priceFilter' value='price' name='filter' onChange={nameFilterCheck}></input>\n                                        <label htmlFor='priceFilter'>Price</label>\n                                    </li>\n                                </ul>}\n                                \n                                {/* <label>Filter:</label> */}\n                                \n                                <input className=\"input\" type='text' id='filter' ref={filterRef} onChange={e => setFilter(e.target.value)}></input>\n                                <hr></hr>\n                            </div>\n                            <div className='sidebar'>\n                                <p>Select filter type</p>\n                                {filterType === 'price' ?\n                                <ul id='filters'>\n            \n                                    <li>\n                                    <input type='radio' id='nameFilter' value='name' name='filter'onChange={nameFilterCheck}></input>\n                                    <label htmlFor='nameFilter'>Name</label>\n                                    </li>\n                                    <li>\n                                    <input type='radio' id='priceFilter' value='price' name='filter' onChange={nameFilterCheck} checked></input>\n                                    <label htmlFor='priceFilter'>Price</label>\n                                    </li>\n                                </ul>\n                                     :\n                                <ul id='filters'>\n                                    <li>\n                                        <input type='radio' id='nameFilter' value='name' name='filter' checked onChange={nameFilterCheck}></input>\n                                        <label htmlFor='nameFilter'>Name</label>\n                                    </li>\n                                    <li>\n                                        <input type='radio' id='priceFilter' value='price' name='filter' onChange={nameFilterCheck}></input>\n                                        <label htmlFor='priceFilter'>Price</label>\n                                    </li>\n                                </ul>}\n                                \n                                {/* <label>Filter:</label> */}\n                                \n                                <input className=\"input\" type='text' id='filter' ref={filterRef} onChange={e => setFilter(e.target.value)}></input>\n                                <hr></hr>\n                            <div className=\"title is-4\">\n                                Category List\n                            </div>\n                            <div>\n                                <li><a href='#all'>All</a></li>\n                                <li><a href='#electronics'>Electronics</a></li>\n                                <li><a href='#events'>Events</a></li>\n                                <li><a href='#home-imp'>Home Improvement</a></li>\n                                <li><a href='#kitchen'>Kitchen Appliances</a></li>\n                                <li><a href='#misc'>Miscellaneous</a></li>\n                                <li><a href='#recreation'>Recreation</a></li>\n                                <li><a href='#yard'>Yardwork</a></li>\n                            </div>\n                            </div>\n                        </Columns.Column>\n                        <Columns.Column size={9}>\n                            <Container>\n                                {categories.map(category => {\n                                    return (\n                                        <div className=\"item-section\" key={category.title}>\n                                            <div id={category.id} className={`notification ${category.color}`}><h1 className=\"title is-3\">{category.title}</h1></div>\n                                            <Columns className=\"is-mobile\">\n                                                <Columns.Column size={1}>\n                                                <button className=\"button scroll\" data-direction='left' data-category={category.title} onClick={handleScrollClick}>\n                                                    <span className=\"icon is-small\" data-direction='left' data-category={category.title}>\n                                                        <i className=\"fas fa-angle-left\" data-direction='left' data-category={category.title}></i>\n                                                    </span>\n                                                </button>\n                                                </Columns.Column>\n                                                <Columns.Column size={10}>\n                                                    <div className=\"item-section\">\n                                                        <div className='is-tablet carousel' ref={category.ref}>\n                                                            {category.items.length < 1 ? <h1 className='nomatch'>No Matches Found</h1> : category.items.map(item => (\n                                                                <div className=\"carousel-item\">\n                                                                    <Card handleItemClick={handlePageChangeOnItemClick} itemId={item._id} price={item.price} img={item.img} itemName={item.name} id={item._id}></Card>\n                                                                </div>\n                                                            ))}\n                                                        </div>\n                                                    </div>\n                                                    \n                                                </Columns.Column>\n                                                <Columns.Column size={1}>\n                                                <button className=\"button scroll\" data-direction='right' data-category={category.title} onClick={handleScrollClick}>\n                                                    <span className=\"icon is-small\" data-direction='right' data-category={category.title}>\n                                                        <i className=\"fas fa-angle-right\" data-direction='right' data-category={category.title}></i>\n                                                    </span>\n                                                </button>\n                                                </Columns.Column>\n                                            </Columns>\n                                        </div>\n                                    );\n                                    })\n                                }\n                           </Container>\n                        </Columns.Column>\n                    </Columns>\n                </section>\n            </div>\n    )\n}\n\nexport default Listings;","import React from 'react'\nimport './styles.css';\n\nconst Field = (props) => {\n    return (\n        <div className = 'field'>\n            <label className=\"label\">{props.title}</label>\n                <div className=\"control\">\n                    <input className=\"input\" type=\"text\" placeholder={props.placeholder} ref={props.reference} {...props}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Field","import React, {useState} from 'react'\nimport './styles.css';\nimport 'react-bulma-components/dist/react-bulma-components.min.css';\nimport {Dropdown} from 'react-bulma-components';\n\nconst DropdownMenu = (props) => {\n    const [selected, setSelected] = useState('');\n    const handleDropdownChange = (e) => {\n        setSelected(e);\n        if(props.extraFunction){\n            props.extraFunction(e);\n        }\n    }\n    return(\n        <Dropdown label={props.label} onChange={handleDropdownChange} value={selected}>\n            {props.items.map(item => (\n                <Dropdown.Item value={item}>\n                    {item}\n                </Dropdown.Item>\n            ))}\n            {/* <Dropdown.Item value=\"item\" >\n                Dropdown item\n            </Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Item value='item2' >\n                Item 2\n            </Dropdown.Item> */}\n        </Dropdown>\n        \n    )\n}\n\nexport default DropdownMenu;","import React, { useState } from 'react';\nimport axios from 'axios'; \nimport './styles.css';\n\nconst ItemImage = (props) => {\n    // const [image, setImage] = useState('');\n    // const [loading, setLoading] = useState(true);\n\n    // const uploadImage = (e) => {\n    //     const files = e.target.files[0];\n    //     const formData = new FormData();\n    //     formData.append('upload_preset', 'sharemasters');\n    //     formData.append('file', files);\n    //     console.log(files);\n    //     console.log(formData);\n\n    // axios.post('https://api.cloudinary.com/v1_1/djz8ibfox/image/upload', formData)\n    // .then(res => {\n    //     console.log(res.data);\n    //     setImage(res.data.secure_url)\n    // })\n    // // .then(res => )\n    // // .then(setLoading(false))\n    // .catch(err => console.log(err));\n    // }\n\n    return(\n        <div className=\"container\" >\n            {!props.image ? \n            <div className=\"file\">\n                <label className=\"file-label\">\n                    <input name=\"file\" type=\"file\" className=\"file-input\" data-cloudinary-field=\"image_id\" data-form-data=\"{ 'transformation': {'crop':'limit','tags':'samples','width':3000,'height':2000}}\" onChange={props.uploadImage}/>\n                    <span className=\"file-cta\">\n                        <span className=\"file-icon\">\n                            <i className=\"fas fa-upload\"></i>\n                        </span>\n                        <span className=\"file-label\">\n                            Choose File\n                        </span>\n                    </span>\n                </label>\n            </div>\n            : <img className='item-img' style={{ width: \"200px\"}} src={props.image} />}\n        </div>\n    )\n}\n\nexport default ItemImage;","import React, {useContext, useState, useRef, useEffect} from 'react'\nimport './styles.css';\nimport Nav from '../../components/Nav/Nav';\nimport { useHistory } from 'react-router-dom';\nimport { useStoreContext } from '../../utils/UserContext/UserContext';\nimport Field from '../../components/Field/Field';\nimport DropdownMenu from '../../components/Dropdown/Dropdown';\nimport ItemImage from '../../components/ItemImage/ItemImage';\nimport {uploadImageToDB, postListing, getCoordinates, addOwned} from '../../utils/API/API';\nimport 'react-bulma-components/dist/react-bulma-components.min.css';\n\n\nconst ListingPage = (props) => {\n    // const user = useContext(UserContext);\n    const [state, dispatch] = useStoreContext();\n    const [image, setImage] = useState('');\n    const history = useHistory();\n    // merge conflict 1/2\n    if(!state.user){\n        history.push('/signup');\n    }\n    \n    // merge conflict 2/2 - i think we need both tho -cna\n    const [lat, setLat] = useState();\n    const [lng, setLng] = useState();\n    // if(!user.id){\n    //     history.push('/login');\n    // }\n\n    const uploadImage = (e) => {\n        const files = e.target.files[0];\n        const formData = new FormData();\n        formData.append('upload_preset', 'sharemasters');\n        formData.append('file', files);\n        console.log(files);\n        console.log(formData);\n\n        uploadImageToDB(formData)\n        .then(res => {\n            console.log(res.data);\n            setImage(res.data.secure_url)\n        })\n        // .then(res => )\n        // .then(setLoading(false))\n        .catch(err => console.log(err));\n    }\n\n    const [category, setCategory] = useState('');\n    const [locationPref, setLocationPref] = useState('');\n\n    const itemNameRef = useRef();\n    const descriptionRef = useRef();\n    const priceRef = useRef();\n    // const locationRef = useRef();\n    const streetRef = useRef();\n    const zipcodeRef = useRef();\n    const cityRef = useRef();\n    const stateRef = useRef();\n    const browserLocationRef = useRef();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const validation = validateInputs()\n        if(!validation){\n            alert('Please fill out all fields')\n        } else {\n        if (locationPref === 'Use current location') {\n            const data = {\n                ownerId: state.user._id,\n                name: itemNameRef.current.value,\n                description: descriptionRef.current.value,\n                category: category,\n                address: \"\",\n                city: \"\",\n                state: \"\",\n                zipCode: \"\",\n                fullAddress: \"\",\n                coordinates: {\n                    lat: lat,\n                    lng: lng\n                },\n                price: priceRef.current.value,\n                img: image,\n                pendingRequest: false,\n                isRented: false,\n                active: false,\n            }\n            postListing(data)\n            .then(res => {\n                console.log(res);\n                addOwned(`${res.data.ownerId}`, {itemId: res.data._id})\n                .then(res => {\n                    console.log('got here')\n                    alert('Item posted successfully')\n                    history.push(\"/profile\");\n                    console.log('this happened')\n                })\n                .catch(err => console.log(err))\n            })\n            .catch(err => console.log(err));\n        } else if ('Use profile location') {\n        getCoordinates(`${state.user.address} ${state.user.city} ${state.user.state} ${state.user.zipCode}`, (res) => {\n        const address = state.user.address;\n        const city = state.user.city;\n        const addressState = state.user.state;\n        const zipcode = state.user.zipCode\n        const data = {\n            // manually putting in ownId, this will be provided through the usercontext\n            ownerId: state.user._id,\n            name: itemNameRef.current.value,\n            description: descriptionRef.current.value,\n            category: category,\n            address: address,\n            city: city,\n            state: addressState,\n            zipCode: zipcode,\n            fullAddress: `${address} ${city} ${addressState} ${zipcode}`,\n            coordinates: {\n                lat: res.results[0].geometry.lat.toFixed(3),\n                lng: res.results[0].geometry.lng.toFixed(3)\n            },\n            price: priceRef.current.value,\n            img: image,\n            pendingRequest: false,\n            isRented: false,\n            active: true,\n        }\n        postListing(data)\n        .then(res => {\n            console.log(res);\n            addOwned(`${res.data.ownerId}`, {itemId: res.data._id})\n            .then(res => { \n                console.log('got here')\n                alert('Item posted successfully')\n                history.push(\"/profile\");})\n                console.log('this happened')\n            .catch(err => console.log(err))\n            \n        })\n        .catch(err => console.log(err));\n        })\n    }\n        else {\n        getCoordinates(`${streetRef.current.value} ${zipcodeRef.current.value} ${cityRef.current.value} ${stateRef.current.value}`, (res) => {\n            console.log(res)\n            const data = {\n                ownerId: state.user._id,\n                name: itemNameRef.current.value,\n                description: descriptionRef.current.value,\n                category: category,\n                address: streetRef.current.value,\n                city: cityRef.current.value,\n                state: stateRef.current.value,\n                zipCode: zipcodeRef.current.value,\n                fullAddress: `${streetRef.current.value} ${zipcodeRef.current.value} ${cityRef.current.value} ${stateRef.current.value}`,\n                coordinates: {\n                    lat: res.results[0].geometry.lat.toFixed(3),\n                    lng: res.results[0].geometry.lng.toFixed(3)\n                },\n                price: priceRef.current.value,\n                img: image,\n                pendingRequest: false,\n                isRented: false,\n                active: false,\n            }\n            console.log(data);\n            postListing(data)\n            .then(res => {\n                console.log(res);\n                addOwned(`${res.data.ownerId}`, {itemId: res.data._id})\n                .then(res => {\n                    console.log('got here');\n                    alert('Item posted successfully')\n                    history.push(\"/profile\");\n                    console.log('this happened')\n                })\n                .catch(err => console.log(err))\n            })\n            .catch(err => console.log(err));\n        })}\n    }\n}\n\n    const handleLocationPref = (locationValue) => {\n        setLocationPref(locationValue);\n    }\n    \n    const handleCategoryDropdown = (selectedCategory) => {\n        setCategory(selectedCategory);\n    }\n\n    const validateInputs = () => {\n        let valid = true;\n        if(itemNameRef.current.value === ''){\n            valid = false;\n        }\n\n        if(descriptionRef.current.value === ''){\n            valid = false;\n        }\n\n        if(priceRef.current.value === ''){\n            valid = false;\n        }\n\n        if(!category) {\n            valid = false;\n        }\n\n        if(!image) {\n            valid = false;\n        }\n\n        if(locationPref === ''){\n            valid = false;\n        }\n\n        if(locationPref === 'Enter a location'){\n            if(streetRef.current.value ==='' || cityRef.current.value === '' || stateRef.current.value === '' || zipcodeRef.current.value === '') {\n                valid = false;\n            }\n        }\n\n        return valid;\n    }\n\n    return (\n        <div className = 'listing-page'>\n            <Nav currentPage ='post'/>\n            <section className='section'>\n                <div className='container notification is-info is-light'>\n                    <Field title='Item Name' placeholder='lawnmower' reference={itemNameRef}/>\n                    <Field title='Description' placeholder='Tell us about your item' reference={descriptionRef} />\n                    <Field title='Price' placeholder='$/day' reference={priceRef}/>\n                    <label className=\"label\">Category</label>\n                    <DropdownMenu label='Select Category' items={['Electronics', 'Events', 'Home Improvement', 'Kitchen Appliances', 'Miscellaneous', 'Recreation', 'Yardwork']} extraFunction={handleCategoryDropdown}/>\n                    <label className=\"label\">Location</label>\n                    <DropdownMenu label='Select Location' items={['Use current location','Use profile location', 'Enter a location']} extraFunction={handleLocationPref}/>\n                    {locationPref === 'Use my location' ? navigator.geolocation.getCurrentPosition((data) => {\n                        let geolocateLat = data.coords.latitude.toFixed(3)\n                        let geolocateLng = data.coords.longitude.toFixed(3)\n                        setLat(geolocateLat)\n                        setLng(geolocateLng)}) : <> </>}\n                    {locationPref === 'Use profile location' ? <Field disabled={true} value={state.user.address}/> : <> </>}\n                    {locationPref === 'Use profile location' ? <Field disabled={true} value={state.user.city}/> : <> </>}\n                    {locationPref === 'Use profile location' ? <Field disabled={true} value={state.user.state}/> : <> </>}\n                    {locationPref === 'Use profile location' ? <Field disabled={true} value={state.user.zipCode}/> : <> </>}\n                    {locationPref === 'Enter a location' ? <Field placeholder='Street' reference={streetRef} /> : <> </>}\n                    {locationPref === 'Enter a location' ? <Field placeholder='City' reference={cityRef} /> : <> </>}\n                    {locationPref === 'Enter a location' ? <Field placeholder='State' reference={stateRef} maxLength={2}/> : <> </>}\n                    {locationPref === 'Enter a location' ? <Field placeholder='Zipcode' reference={zipcodeRef} maxLength={5}/> : <> </>}\n                    <div className='field'>\n                        <label className=\"label\">Item Image</label>\n                        <ItemImage image={image} uploadImage={uploadImage}/>\n                    </div>\n                    <div className=\"control\">\n                        <button className=\"button is-link\" onClick={handleSubmit}>Submit</button>\n                    </div>\n                </div>\n            </section>\n            {/* <Container class = 'listing-container'>\n            </Container> */}\n        </div>\n    )\n}\n\nexport default ListingPage;","import React, { useState, useRef } from 'react';\nimport './styles.css';\nimport DatePicker from 'react-datepicker';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useStoreContext } from '../../utils/UserContext/UserContext';\nimport { Container } from \"react-bulma-components\";\nimport { postAppointment, renterRequest } from '../../utils/API/API';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction ItemRequestForm() {\n    const [state, dispatch] = useStoreContext();\n    const { id } = useParams();\n    const [startDate, setStartDate] = useState();\n    const [endDate, setEndDate] = useState();\n    const [appointmentInfo, setAppointmentInfo] = useState({});\n    const history = useHistory();\n\n\n\n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n        if (startDate > endDate) {\n            return alert('The start date cannot be after the end date!')\n        }\n        const formattedStartDate = `${startDate.getMonth()}-${startDate.getDate()}-${startDate.getFullYear()}`\n        const formattedEndDate = `${endDate.getMonth()}-${endDate.getDate()}-${endDate.getFullYear()}`\n        const appointment = {\n            itemId: id,\n            // renter id will be the userId from user context for this field\n            \n            // previous code before merge\n            renterId: state.user._id,\n\n            startDate: formattedStartDate,\n            endDate: formattedEndDate\n        }\n \n            //submit data to appointments as a request to owner\n            postAppointment(appointment)\n            .then(res => {\n                const appointmentId = res.data._id;\n                renterRequest({renterUserId: state.user._id, pendingRequest: true, $push: {currentAppointment: appointmentId}}, id)\n                .then(res => console.log(res))\n                .catch(err => console.log(err));\n                alert('Request sent')\n                history.push('/listings');\n            })\n            .catch(err => console.log(err));\n            \n            \n\n\n    }\n\n\n    // const handleCancel = (e) => {\n    //     e.preventDefault();\n    //     rentalCancel(id);\n\n    // }\n\n    // const handleFormCancel = (e) => {\n    //     startDateRef.current.value = \"\";\n    //     endDateRef.current.value = \"\";\n    // }\n\n    return (\n        <Container className=\"notification\">\n            <div className=\"title is-4\">Request Rental</div>\n            <div className='item-request-form'>\n                <div className=\"date-picker\">\n                    <span className=\"title is-6\">Start Date</span>\n                    <div>\n                        <DatePicker showPopperArrow={false} selected={startDate} onChange={date => setStartDate(date)} minDate={Date.now()} placeholderText=\"Please choose start date..\"/> \n                    </div>\n                </div> \n                <div className=\"date-picker\">\n                    <span className=\"title is-6\">End Date</span>\n                    <div>\n                        <DatePicker showPopperArrow={false} selected={endDate} onChange={date => setEndDate(date)} minDate={startDate} placeholderText=\"Please choose end date..\" />\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"field is-grouped button-container\">\n                <div className=\"control\">\n                    <button className=\"button is-primary\" onClick={handleFormSubmit}>Submit</button>\n                </div>\n            </div>\n        </Container>\n    )\n}\n\nexport default ItemRequestForm;\n","import React, { useState, useEffect }from 'react';\nimport './styles.css';\nimport { useParams } from 'react-router-dom';\nimport { getItem, initMessage } from '../../utils/API/API';\nimport { useStoreContext } from '../../utils/UserContext/UserContext';\n\nfunction MessageOwnerButton() {\n    const { id } = useParams();\n    const [state, dispatch] = useStoreContext();\n    const [item, setItem] = useState({})\n    const [owner, setOwner] = useState({})\n    const [ownerEmail, setOwnerEmail] = useState(\"\")\n\n        useEffect(() => {\n        getItem(id)\n        .then(res => {\n            console.log(res)\n            res = res.data[0]\n            setOwnerEmail('mailto:'+res.ownerId.email)\n        })\n    }, []);\n\n\n    return (\n        <div>\n            <a href={ownerEmail} target=\"_blank\">\n                <button className=\"button is-primary is-light is-outlined message-owner\">\n                    Message the Owner\n                </button>\n            </a>\n        </div>\n    )\n}\n\nexport default MessageOwnerButton;","import React, { useState, useEffect } from 'react';\nimport './styles.css';\nimport { Section, Container, Columns } from \"react-bulma-components\";\nimport ItemRequestForm from '../ItemRequestForm/ItemRequestForm';\nimport { useParams } from 'react-router-dom';\nimport { getItem } from '../../utils/API/API';\nimport MessageOwnerButton from '../MessageOwnerButton/MessageOwnerButton';\nimport { useStoreContext } from '../../utils/UserContext/UserContext';\n\nfunction ItemInfo() {\n    const { id } = useParams();\n    const [item, setItem] = useState({})\n    const [owner, setOwner] = useState({})\n    const [state] = useStoreContext();\n\n        useEffect(() => {\n        getItem(id)\n        .then(res => {\n            res = res.data[0]\n            // console.log('hi from useeffect in ItemInfo')\n            console.log(res);\n            setItem(res)\n            setOwner(res.ownerId)\n        })\n    }, []);\n\n    return (\n\n        <Section>\n            <Container>\n            <h1 className=\"is-size-3 has-text-weight-bold item-name\">{item.name}</h1>\n                <Columns>\n                    <div className=\"column is-half\">\n                        <figure className=\"item-page-image\">\n                            {item.img ? <img className=\"item-page-image\" src={item.img} alt={item.name}/>: <img className=\"item-page\" src=\"https://bulma.io/images/placeholders/128x128.png\"/>}\n                        </figure>\n                    </div>\n\n                    <div className=\"column is-half\">\n                        <div className=\"title is-5\">Price: ${item.price}/day</div>\n                        {/* <div className=\"title is-5\">User: {owner.username}</div> */}\n                        {item.city ? <div className=\"title is-5\">Location: {item.city}, {item.state}</div> : <div className=\"title is-5\">Location: See map below</div>}\n                        <div className=\"title is-5\">Description: {item.description}</div>\n                        <MessageOwnerButton />\n                        <br />\n                        <br />\n                        {!state.user ? <h2>Please login to rent an item</h2> : state.user.username === owner.username ? <h2>This is your item</h2> : item.pendingRequest || item.isRented ? <p className=\"not-available-alert\">*** This item is rented or an appointment is pending. Check back later or message the owner for more info.</p> :\n                        <ItemRequestForm />}\n\n                    </div>\n\n                </Columns>\n\n            </Container>\n\n\n\n        </Section>\n\n    )\n}\n\nexport default ItemInfo;","import React, { useState, useEffect } from 'react';\nimport { Container, Columns } from \"react-bulma-components\";\nimport { GoogleMap, withScriptjs, withGoogleMap, Circle } from 'react-google-maps';\nimport { getItem } from \"../../utils/API/API\";\nimport { useParams } from 'react-router-dom';\nimport \"./ItemGoogleMaps.css\"\n\n\nfunction Map() {\n    const [lat, setLat] = useState({})\n    const [lng, setLng] = useState({})\n    const { id } = useParams();\n\n\n    useEffect(() => {\n        getItem(id)\n        .then(res => {\n            console.log('hi from googlemaps')\n            console.log(res);\n            let coordinates = res.data[0].coordinates\n            console.log(coordinates)\n            setLat(coordinates.lat)\n            setLng(coordinates.lng)\n        })\n    }, []);\n\n\n    return (\n\n        \n\n        <GoogleMap\n            defaultZoom={14} \n            center={{lat:lat, lng:lng}}\n        >\n              {true && (\n                <Circle\n                  center={{lat:lat, lng:lng}}\n                  radius={300}\n                  options={{strokeColor: \"#00d1b2\"}}\n                />\n              )}\n\n\n\n        </GoogleMap>\n    )\n}\n\nconst WrapperMap = withScriptjs(withGoogleMap(Map));\n\nexport default function ItemMap() {\n    return (\n        <Container className=\"google-maps-container\">\n            <Columns>\n                <div style={{width: \"100vw\", height: \"69vh\"}}>\n                    <WrapperMap googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyAH6mTxzDGvX1DWOPmZDMAJazm7tDvuAt0`} \n                    loadingElement={<div style={{ height: \"100%\"}} />}\n                    containerElement={<div style={{ height: \"100%\"}} />}\n                    mapElement={<div style={{ height: \"100%\"}} />}\n                    />\n                </div>\n            </Columns>\n        </Container>\n    )\n}","import React from 'react';\nimport ItemInfo from '../../components/ItemInfo/ItemInfo';\nimport Nav from \"../../components/Nav/Nav\";\nimport ItemGoogleMaps from \"../../components/ItemGoogleMaps/ItemGoogleMaps\"\nimport './styles.css';\n\n\nfunction ItemPage() {\n    \n    return (\n        <div>\n            <Nav />\n            <ItemInfo />\n            {/* <ItemRequestForm /> */}\n            <ItemGoogleMaps />\n        </div>\n\n    )\n}\n\nexport default ItemPage","import React from 'react'\n\nconst NavTabs = (props) => {\n    return(\n        <div className = \"tabs is-medium\">\n            <ul>\n                {props.tabs.map(tab => (\n                    <li key={tab} data-page={tab} onClick={props.handlePageChange}><a href='#' data-page={tab}>{tab}</a></li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default NavTabs;","import React from \"react\";\nimport \"./styles.css\";\n\nimport { Notification, Columns } from 'react-bulma-components';\n\nconst ProfileItemContainer = (props) => {\n    return (\n        <Notification>\n            <Columns>\n                <Columns.Column size={3}>\n                    <figure className=\"item-page\">\n                        <img className=\"item-page\" src={props.image} />\n                    </figure>\n                </Columns.Column>\n                <Columns.Column size={6}>\n                    <div className=\"content\">\n                        <div className=\"title is-5\">Item Name: {props.title}</div>\n                        {props.startDate ? <div className=\"title is-5\">Start Date: <span>{props.startDate}</span></div> : <></>}\n                        {props.endDate ?<div className=\"title is-5\">End Date: <span>{props.endDate}</span></div> : <></>}\n                        {props.description ? <div className=\"title is-5\">Description: <span>{props.description}</span> </div>: <></>}\n                        {props.price ? <div className=\"title is-5\">Price: <span>${props.price}/day</span> </div>: <></>}\n                        {props.rented ? <div className=\"title is-5\">Rental Status: <span>{props.rented.itemStatus ? 'Rented' : 'Available'}</span> </div>: <></>}\n                        {props.history ? <div className=\"title is-5\">Number of times rented: <span>{props.history.length}</span> </div>: <></>}\n                    </div>\n                </Columns.Column>\n                <Columns.Column size={3}>\n                    <div className=\"field is-grouped\">\n                        {props.children}\n                    </div>\n                </Columns.Column>\n            </Columns>\n        </Notification>\n    );\n};\n\nexport default ProfileItemContainer;","import React from \"react\";\n\nimport { Button } from 'react-bulma-components';\n\nconst ReturnButton = (props) => {\n    return (\n        <p className=\"control\">\n            <Button className=\"is-primary\" {...props}>\n                {props.children}\n            </Button>\n        </p>\n    );\n};\n\nexport default ReturnButton;","import React from \"react\";\n\nimport { Button } from 'react-bulma-components';\n\nconst SuccessButton = (props) => {\n    return (\n        <p className=\"control\">\n            <Button className=\"is-success is-outlined\" {...props}>\n                {props.children}\n            </Button>\n        </p>\n    );\n};\n\nexport default SuccessButton;","import React from \"react\";\n\nimport { Button } from 'react-bulma-components';\n\nconst RejectButton = (props) => {\n    return (\n        <p className=\"control\">\n            <Button className=\"is-danger is-outlined\" {...props}>\n                {props.children}\n            </Button>\n        </p>\n    );\n};\n\nexport default RejectButton;","import React, { useState, useEffect } from \"react\";\n\n//user context\nimport { useStoreContext } from \"../../utils/UserContext/UserContext\";\nimport { SET_USER } from \"../../utils/UserContext/UserActions\";\nimport { getProfile, addRental, removeRental } from '../../utils/API/API';\n\nimport Nav from \"../../components/Nav/Nav\";\nimport NavTabs from \"../../components/NavTabs/NavTabs\";\nimport {Section, Container} from 'react-bulma-components';\nimport ProfileItemContainer from \"../../components/ProfileItemContainer\";\nimport { useHistory, NavLink} from 'react-router-dom';\n\n//put buttons in ProfileItemContent children\n// Rental Buttons\nimport ReturnButton from \"../../components/ReturnButton\";\nimport MessageOwnerButton from \"../../components/MessageOwnerButton/MessageOwnerButton\";\n\n// Listings and Return Buttons \n// Accept/Reject for Listings and Confirm/Report for Returns\nimport SuccessButton from \"../../components/SuccessButton/SuccessButton\";\nimport RejectButton from \"../../components/RejectButton/RejectButton\";\n\n//API functions\nimport {approveRental, declineRental, returnItem, confirmReturn, removeAppointment} from '../../utils/API/API';\n\nconst Profile = () => {\n    // state information\n    // const [allitems, setallitems] = useState([])\n    const [requests, setRequests] = useState([]);\n    const [rentals, setRentals] = useState([]);\n    const [returns, setReturns] = useState([]);\n    const [listings, setListings] = useState([])\n    const [myHistory, setMyHistory] = useState([]);\n    const [state, dispatch] = useStoreContext();\n    const history = useHistory();\n\n    const [selected, setSelected] = useState('Profile');\n\n    const setUserState = (user) => {\n        dispatch({\n            type: SET_USER,\n            user: user\n        });\n    };\n\n    const filterRequests = (array) => {\n        const filteredItems = array.filter(item => {\n            return (item.pendingRequest);\n        })\n        setRequests(filteredItems);\n    }\n\n    const filterRentals = (array) => {\n        const filteredItems = array.filter(item => {\n            return (item.isRented);\n        })\n        setRentals(filteredItems);\n    }\n\n    const filterReturns = (array) => {\n        const filteredItems = array.filter(item => {\n            return (!item.active)\n        })\n        setReturns(filteredItems);\n    }\n\n    const handlePageChange = (e) => {\n        const nextPage = e.target.getAttribute('data-page');\n        switch(nextPage) {\n            case 'My items':\n                setListings(state.user.owned)\n                break;\n            case 'Rental History':\n                setMyHistory(state.user.rentalHistory)\n                break;\n            case 'Rentals':\n                filterRentals(state.user.rentals);\n                break;\n            case 'Requests':\n                filterRequests(state.user.owned);\n                break;\n            case 'Returns':\n                filterReturns(state.user.owned);\n                break;\n            default:\n                break;\n        }\n        setSelected(nextPage);\n    }\n\n    const handleItemReturn = (e) => {\n        //make api call to change item with id to not rented\n        const id = e.target.getAttribute('data-id')\n        let statusData = {isRented: false, active: false};\n        returnItem(id, statusData)\n        .then(res => {\n            const filtered = filterOffItem(id, state.user.rentals)\n            filterRentals(filtered);\n        })\n    }\n\n    const handleConfirmReturned = (e) => {\n        const id = e.target.getAttribute('data-id')\n        const requestId = e.target.getAttribute('data-renterid');\n        let statusData = {active: true}\n        confirmReturn(id, statusData)\n        .then(res => {\n            //pull item from rented user\n            console.log(res)\n            removeAppointment(id, {appointmentId: res.data.currentAppointment[0]})\n            removeRental(requestId, {itemId: id})\n            const filtered = filterOffItem(id, state.user.owned)\n            filterReturns(filtered)\n        })\n    }\n\n    const handleAccept = (e) => {\n        //make api call to set item with id to rented and pending to false\n        const id = e.target.getAttribute('data-id');\n        const requestId = e.target.getAttribute('data-renterid')\n        let statusData = {pendingRequest: false, isRented: true}\n        approveRental(id, statusData)\n        .then(res => {\n            addRental(requestId, {itemId: id});\n            const filtered = filterOffItem(id, state.user.owned);\n            filterRequests(filtered)\n            // setRequests(filtered);\n        })\n        .catch(res => console.log(res));\n    }\n\n    const handleReject = (e) => {\n        //make api call to set pending to false. handle rejection message?\n        const id = e.target.getAttribute('data-id');\n        const requestId = e.target.getAttribute('data-appointmentid')\n        let statusData = {pendingRequest: false, $pull: {currentAppointment: requestId}};\n        declineRental(id, statusData)\n        .then((res) => {\n            const filtered = filterOffItem(id, state.user.owned);\n            filterRequests(filtered);\n        })\n        .catch(res => console.log(res));\n    }\n    \n    const filterOffItem = (id, array) => {\n        const filteredItems = array.filter(item => {\n            return(item._id !== id)\n        })\n\n        return filteredItems;\n    }\n\n    useEffect(() => {\n        if(!state.user) {\n            history.push('/signup');\n        }\n        else {\n            getProfile(state.user.userId)\n            .then(res => {\n                setUserState(res.data[0]);\n            })\n        }\n    }, [])\n\n    return (\n        <div>\n            { state.user ? \n            <div className='profile-page'>\n                <Nav currentPage = 'profile'/>\n                <br />\n                <Container>\n                    <NavTabs handlePageChange={handlePageChange} tabs={['Profile','My items', 'Rental History', 'Rentals', 'Requests', 'Returns']} />\n                </Container>\n                <Section>\n                    <Container>\n                        {\n                            selected === 'My items' ? <>{listings.length !== 0 ? listings.map(listing => (\n                                <ProfileItemContainer\n                                    image={listing.img}\n                                    title={listing.name}\n                                    description={listing.description}\n                                    price={listing.price}\n                                    rented={{itemStatus: listing.isRented}}\n                                    history={listing.appointmentHistory}\n                                    >\n                                </ProfileItemContainer>\n                            )):<div>No items posted yet</div>}</>\n                            : selected === 'Rental History' ? <>{myHistory.length !== 0 ? myHistory.map((item, i) => (\n                                <ProfileItemContainer\n                                    image={item.img}\n                                    title={item.name}\n                                    startDate={item.appointmentHistory[i].startDate}\n                                    endDate={item.appointmentHistory[i].endDate}>\n                                    </ProfileItemContainer>\n                            )): <div>You havent rented any items yet</div>} </>\n                            : selected === 'Rentals' ? <>{rentals.length !== 0 ? rentals.map(rental => (                \n                                <ProfileItemContainer \n                                    image={rental.img}\n                                    title={rental.name}\n                                    startDate={rental.currentAppointment[0].startDate}\n                                    endDate={rental.currentAppointment[0].endDate}>\n                                    <ReturnButton onClick={handleItemReturn} data-id={rental._id}>Return</ReturnButton>\n                                    {/* <MessageOwnerButton></MessageOwnerButton> */}\n                                </ProfileItemContainer>\n                            )):<div>No Rentals</div>}</>\n                            : selected === 'Requests' ? <>{requests.length !== 0 ? requests.map(request => (                \n                                <ProfileItemContainer \n                                    image={request.img}\n                                    title={request.name}\n                                    startDate={request.currentAppointment[0].startDate}\n                                    endDate={request.currentAppointment[0].endDate}>\n                                    <SuccessButton onClick={handleAccept} data-renterid={request.renterUserId} data-id={request._id}>Accept</SuccessButton>\n                                    <RejectButton onClick={handleReject} data-appointmentid={request.currentAppointment[0]._id} data-id={request._id}>Reject</RejectButton>\n                                </ProfileItemContainer>\n                            )):<div>No Requests</div>}</>\n                            : selected === 'Returns' ? <>{returns.length !== 0 ? returns.map(returnItem => (                \n                                <ProfileItemContainer \n                                    image={returnItem.img}\n                                    title={returnItem.name}\n                                    startDate={returnItem.currentAppointment[0].startDate}\n                                    endDate={returnItem.currentAppointment[0].endDate}>\n                                    <SuccessButton onClick={handleConfirmReturned} data-renterid={returnItem.renterUserId} data-id={returnItem._id}>Confirm</SuccessButton>\n                                    {/* <RejectButton onClick={handlePageChange} data-id={returnItem._id}>Report</RejectButton> */}\n                                </ProfileItemContainer>\n                            )):<div>No Returns</div>}</>\n                            : <div className=\"box\">\n                                <h2 className=\"subtitle is-2\">{`${state.user ? state.user.firstName: <></>} ${state.user ? state.user.lastName: <></>} (${state.user.username})`} <img  src={state.user.icon}/></h2>\n                                <div className=\"content\">\n                                    <h6 className=\"subtitle is-6\">{state.user ? `${state.user.address} ${state.user.city}, ${state.user.state} ${state.user.zipCode}`: <> </>}</h6>\n                                    <h6 className=\"subtitle is-6\">{state.user ? `${state.user.email}`: <> </>}</h6>\n                                    <h6 className=\"subtitle is-6\">Total listings: {state.user ? state.user.owned.length : 'no listing'}</h6>\n                                    <h6 className=\"subtitle is-6\">Items Renting: {state.user ? state.user.rentals.length : 'no listing'}</h6>\n                                    <NavLink to=\"/editprofile\"><i className={`fas fa-pencil-alt`}></i></NavLink>\n                                </div>\n                            </div>}\n                    </Container>\n\n\n                </Section>\n            </div> : <div></div> }\n        </div>\n    )\n}\n\nexport default Profile;","const images = [\n    { id: \"butterfly\", src: './assets/icons/butterfly.png'},\n    { id: \"dog\", src: './assets/icons/dog.png'},\n    { id: \"falcon\", src: './assets/icons/falcon.png'},\n    { id: \"iguana\", src: './assets/icons/iguana.png'},\n    { id: \"octopus\", src: './assets/icons/octopus.png'},\n    { id: \"owl\", src: './assets/icons/owl.png'}\n  ];\n  \nexport default images;","import React, {useRef, useState, useEffect } from 'react';\nimport FormField from \"../FormField/FormField\";\nimport FormControl from \"../FormControl/FormControl\";\nimport FormIcon from \"../FormIcon/FormIcon\";\nimport FormHelp from \"../FormHelp/FormHelp\";\nimport StatesDropdown from \"../StatesDropdown/StatesDropdown\";\nimport images from \"../../images\";\nimport { Button, Section, Container, Columns} from \"react-bulma-components\";\nimport { updateProfile, getCurrentUser, getProfile } from '../../utils/API/API';\nimport { useStoreContext } from \"../../utils/UserContext/UserContext\";\nimport { SET_USER } from \"../../utils/UserContext/UserActions\";\n\nconst UpdateProfile = (props) => {\n    const [state, dispatch] = useStoreContext();\n    const [selectedIcon, setIcon] = useState(); \n\n    const setUserState = (user) => {\n        dispatch({\n            type: SET_USER,\n            user: user\n        });\n    };\n\n    //profile fields refs\n    const emailRef = useRef();\n    const addressRef = useRef();\n    const cityRef = useRef();\n    const stateRef = useRef();\n    const zipCodeRef = useRef();\n\n    const [signupErrorState, setSignupError] = useState({});\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const updatedUser = {\n            address: addressRef.current.value.length > 0  ? addressRef.current.value : state.user.address,\n            city: cityRef.current.value.length > 0 ? cityRef.current.value : state.user.city,\n            state: stateRef.current.value.length > 0 ? stateRef.current.value : state.user.state,\n            zipCode: zipCodeRef.current.value.length > 0 ? zipCodeRef.current.value : state.user.zipCode,\n            email: emailRef.current.value.length > 0 ? emailRef.current.value : state.user.email,\n            icon: selectedIcon ? selectedIcon : state.user.icon\n        }\n\n        updateProfile(state.user.userId, updatedUser)\n        .then(() => {\n            //updatesuccess\n            setSignupError({});\n            alert(\"Profile Updated\");\n            updateUserState();\n        })\n        .catch(err => {\n            // update fail\n            setSignupError(err.response.data.err);\n        });\n    }\n\n    const updateUserState = () => {\n        getCurrentUser().then(res => {\n            getProfile(res.data.user._id)\n                .then(res => {\n                    setUserState(res.data[0]);\n                });\n        });\n    }\n\n    const handleIconSelect = (e) => {\n        setIcon(e.target.value);\n    }\n\n\n    return (\n        <Section>\n            <Container className=\"notification is-info is-light\">\n                <h3 className=\"subtitle is-3\">{`${state.user.firstName} ${state.user.lastName} (${state.user.username})`}</h3>\n                <Columns>\n                    <Columns.Column className=\"is-narrow\">\n                        <FormField label=\"Profile Icon\">\n                            <FormControl>\n                                <Columns>\n                                    { images.map(({id, src}) => {\n                                        return (\n                                            <Columns.Column key={ id } className=\"is-narrow\">\n                                                <label className=\"radio\">\n                                                    <input type=\"radio\" name=\"icon\" value={ src } onClick={ handleIconSelect }/>\n                                                    <img src={ src }/>\n                                                </label>\n                                            </Columns.Column>\n                                        )\n                                    }) }\n                                </Columns>\n                            </FormControl>\n                        </FormField>\n                    </Columns.Column>\n                </Columns>\n                <FormField label=\"Address\">\n                    <FormControl>\n                        <input className=\"input\" type=\"text\" placeholder=\"5555 N Main St\" defaultValue={state.user.address ? state.user.address : \"\"} ref={addressRef} />\n                    </FormControl>\n                </FormField>\n                <Columns>\n                    <Columns.Column>\n                        <FormField label=\"City\">\n                            <FormControl>\n                                <input className=\"input\" type=\"text\" placeholder=\"Seattle\" defaultValue={state.user.city ? state.user.city: \"\"} ref={cityRef} />\n                            </FormControl>\n                        </FormField>\n                    </Columns.Column>\n                    <Columns.Column className=\"is-narrow\">\n                        <FormField label=\"State\">\n                            <FormControl>\n                                <StatesDropdown stateRef={stateRef} defaultState={state.user.state ? state.user.state : null}></StatesDropdown>\n                            </FormControl>\n                        </FormField>\n                    </Columns.Column>\n                    <Columns.Column className=\"is-narrow\">\n                        <FormField label=\"Zip Code\">\n                            <FormControl>\n                                <input className={`input ${signupErrorState.zipCode ? \"is-danger\" : \"\"}`} type=\"text\" placeholder=\"00000\" defaultValue={state.user.zipCode ? state.user.zipCode : \"\"} ref={zipCodeRef} />\n                            </FormControl>\n                        </FormField>\n                    </Columns.Column>\n                </Columns>\n                <FormField label=\"Email\">\n                    <FormControl controlClass=\"has-icons-left has-icons-right\">\n                        <input \n                            className={`input ${signupErrorState.email ? \"is-danger\" : \"\"}`} type=\"email\" placeholder=\"@email.com\" defaultValue={state.user.email? state.user.email: \"\"} ref={emailRef} />\n                        <FormIcon size=\"small\" side=\"left\" icon=\"envelope\" />\n                        <FormIcon size=\"small\" side=\"right\" icon=\"exclamation-triangle\" />\n                    </FormControl>\n                </FormField>\n                <div className=\"field is-grouped\">\n                    <div className=\"control\">\n                        <Button className=\"is-link\" type=\"submit\" onClick={handleSubmit}>Submit</Button>\n                    </div>\n                    <FormHelp type=\"danger\" message={signupErrorState ? signupErrorState.message : \"\"} />\n                </div>\n            </Container>\n        </Section>\n    )\n}\n\nexport default UpdateProfile;","import React, { useEffect } from 'react';\nimport UpdateProfile from '../../components/UpdateProfile/UpdateProfile';\nimport Nav from '../../components/Nav/Nav';\nimport { useStoreContext } from \"../../utils/UserContext/UserContext\";\nimport { useHistory } from 'react-router-dom';\n\nconst EditProfile = () => {\n    const [state, dispatch] = useStoreContext();\n    const history = useHistory();\n\n    useEffect(()=>{\n        if(!state.user) {\n            history.push('/signup');\n        }\n    }, []);\n\n    return (\n        <div>\n            <Nav></Nav>\n            {state.user ? <UpdateProfile /> : <div></div>}\n        </div>\n    )\n}\n\nexport default EditProfile;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport { UserProvider } from \"./utils/UserContext/UserContext\";\nimport Signup from './pages/Signup/Signup';\nimport Home from \"./pages/Home/Home\";\nimport Listings from './pages/Listings/Listings'\nimport ListingPage from \"./pages/ListingPost/ListingPost\";\nimport ItemPage from \"./pages/Item/Item\";\nimport Profile from \"./pages/Profile/Profile\";\nimport EditProfile from \"./pages/EditProfile/EditProfile\";\n\n\nfunction App() {\n\n  return (\n    <UserProvider>\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path = '/' component={Home} />\n          <Route exact path = '/signup' component={Signup} />\n          <Route exact path = '/listings' component={Listings} />\n          <Route exact path = '/newlisting' component={ListingPage} />\n          <Route exact path = '/items/:id' component={ItemPage} />\n          <Route exact path = '/profile' component={Profile} />\n          <Route exact path = '/editprofile' component={EditProfile} />\n        </Switch>\n  \n      </div>\n    </Router>\n    </UserProvider>\n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}